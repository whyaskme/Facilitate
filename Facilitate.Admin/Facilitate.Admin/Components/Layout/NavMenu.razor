@implements IDisposable

@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Authorization

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="Quotes/Index">
            <img src="/images/logos/White Transparent.png" class="logo" />
        </a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <AuthorizeView>
            <Authorized>
                <div class="user-greeting">
                    Hello @context.User.Identity?.Name!
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized></NotAuthorized>
        </AuthorizeView>

        <AuthorizeView Roles="System Admin,Site Admin,Group Admin">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Users">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Manage Users
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized></NotAuthorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> My Account
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <AuthorizeView Roles="System Admin,Site Admin,Group Admin">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Quotes/Leads">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Quotes
                    </NavLink>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Quotes/Opportunities">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Quotes
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Quotes/Upload">
                <span class="bi" aria-hidden="true"></span> Upload
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" target="_blank" href="https://facilitate.org">
                <span class="bi" aria-hidden="true"></span> Facilitate.org
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" target="_blank" href="https://api.facilitate.org/swagger">
                <span class="bi" aria-hidden="true"></span> Web Api
            </NavLink>
        </div>

    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

