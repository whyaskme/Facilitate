@page "/upload"

@using Facilitate.Admin.Data
@using DevExpress.Data
@using DevExpress.Data.Linq
@using Facilitate.Libraries.Models;
@using MongoDB.Bson;

@using Json.Net;

@attribute [StreamRendering(true)]
@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<PageTitle>Upload</PageTitle>

<h1>Upload</h1>

@* <DxUpload UploadMode=UploadMode.OnButtonClick
          SelectedFilesChanged="@SelectedFilesChanged"
          AllowMultiFileUpload="true"
          @ref="MyUpload">
</DxUpload> *@

<DxUpload @ref="MyUpload" 
    Name="MyUpload"
    UploadMode=UploadMode.OnButtonClick
    AllowMultiFileUpload="true"
    UploadUrl="@GetUploadUrl("https://localhost:7235/api/fileservices")"
    SelectedFilesChanged="@SelectedFilesChanged"
    MaxFileSize="15000000"
    CssClass="@(SelectedFilesCount > 0 ? "w-100" : "add-item-button")">
</DxUpload>

<DxButton Text="Upload the First File" Click=OnButtonClick />

@code {
    int SelectedFilesCount { get; set; }

    bool UploadVisible { get; set; } = false;

    IEnumerable<UploadFileInfo> Files { get; set; }

    UploadFileInfo FirstFile { get; set; }
    DxUpload MyUpload { get; set; }

    protected void SelectedFilesChanged(IEnumerable<UploadFileInfo> files)
    {
        Files = files;
        UploadVisible = files.ToList().Count > 0;

        InvokeAsync(StateHasChanged);
    }

    void OnButtonClick()
    {
        try
        {
            FirstFile = Files.First();
            MyUpload.UploadFile(FirstFile);
        }
        catch(Exception ex)
        {
            var errMsg = ex.Message;
        }
    }

    protected string GetUploadUrl(string url)
    {
        return NavigationManager.ToAbsoluteUri(url).AbsoluteUri;
    }
}
