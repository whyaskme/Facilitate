@page "/"

@using AdminBlazor.Data
@using Facilitate.Libraries.Models;

@attribute [StreamRendering(true)]
@rendermode InteractiveServer
@inject WebServices WebServices
@* @inject Leaderboard Leaderboard *@

<PageTitle>Welcome to Facilitate Platform Administration</PageTitle>

<div class="welcome">

    <DxGridLayout CssClass="welcome-gridlayout" RowSpacing="3rem">
        <Rows>
            <DxGridLayoutRow Height="auto" Areas="header"></DxGridLayoutRow>
            <DxGridLayoutRow Height="auto" Areas="cards"></DxGridLayoutRow>
        </Rows>
        <Items>
            <DxGridLayoutItem Area="header" CssClass="welcome-title">
                <Template>
                    <div class="welcome-title-header">Welcome to Facilitate Platform Administration</div>

                    <div class="quotes-leaderboard">
                        <span class="summary-item">
                            <span class="stat-count"><b>@leaderboardStats.TotalQuoteCount.ToString("N0") Quotes</b></span>
                            <span class="stat-count">@leaderboardStats.TotalQuoteValue.ToString("C0")</span>
                            <span class="stat-count">(@leaderboardStats.TotalQuoteSqFt.ToString("N0") sqft)</span>
                        </span>
                        <span class="summary-item">
                            <a href="/leads">Leads</a>
                            <span class="stat-count"><b>@leaderboardStats.LeadCount.ToString("N0")</b></span>
                            <span class="stat-count">@leaderboardStats.LeadValue.ToString("C0")</span>
                        </span>
                        <span class="summary-item">
                            <a href="/Opportunities">Opportunities</a>
                            <span class="stat-count"><b>@leaderboardStats.OpportunityCount.ToString("N0")</b></span>
                            <span class="stat-count">@leaderboardStats.OpportunityValue.ToString("C0")</span>
                        </span>
                        <span class="summary-item">
                            <a href="/Customers">Customers</a>
                            <span class="stat-count"><b>@leaderboardStats.CustomerCount.ToString("N0")</b></span>
                            <span class="stat-count">@leaderboardStats.CustomerValue.ToString("C0")</span>
                        </span>
                        <span class="summary-item">
                            <a href="/Completed">Completions</a>
                            <span class="stat-count"><b>@leaderboardStats.CompletionCount.ToString("N0")</b></span>
                            <span class="stat-count">@leaderboardStats.CompletionValue.ToString("C0")</span>
                        </span>
                        <span class="summary-item">
                            <a href="/Archives">Archives</a>
                            <span class="stat-count"><b>@leaderboardStats.ArchiveCount.ToString("N0")</b></span>
                            <span class="stat-count">@leaderboardStats.ArchiveValue.ToString("C0")</span>
                        </span>
                        <span class="summary-item">
                            <a href="/Warranties">Warranties</a>
                            <span class="stat-count"><b>@leaderboardStats.WarrantyCount.ToString("N0")</b></span>
                            <span class="stat-count">@leaderboardStats.WarrantyValue.ToString("C0")</span>
                        </span>
                    </div>

                    <div class="welcome-title-content">
                        <img src="images/Backgrounds/Contractors.webp" alt="Facilitate Platform Admin" style="width: 100%; height: auto;" />
                        <br /><br />
                        Dashboard charts coming...
                    </div>
                </Template>
            </DxGridLayoutItem>
        </Items>
    </DxGridLayout>
</div>

<DxLoadingPanel @bind-Visible=@LoadingPanelVisible
                PositionTarget="body"
                ApplyBackgroundShading="true"
                CssClass="w-100">
</DxLoadingPanel>

@code {

    public QuoteLeaderboard leaderboardStats;

    protected override void OnInitialized()
    {
        leaderboardStats = WebServices.GetLeaderBoardStats();
    }

    bool LoadingPanelVisible { get; set; } = true;

    public string updateStatus = "Refreshing";

    public Index()
    {
        var timer = new Timer(new TimerCallback(_ =>
        {
            leaderboardStats = WebServices.GetLeaderBoardStats();

            InvokeAsync(() =>
            {
                StateHasChanged();

                LoadingPanelVisible = false;
            });
        }), null, 1000, 1000);
    }

    private IEnumerable<Quote>? quotes;

}