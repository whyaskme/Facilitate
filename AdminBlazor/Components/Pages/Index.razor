@page "/"

@using AdminBlazor.Data
@using Facilitate.Libraries.Models;

@attribute [StreamRendering(true)]
@rendermode InteractiveServer
@inject WebServices WebServices

<PageTitle>Welcome to Facilitate Platform Administration</PageTitle>

<div class="welcome">

    <DxGridLayout CssClass="welcome-gridlayout" RowSpacing="3rem">
        <Rows>
            <DxGridLayoutRow Height="auto" Areas="header"></DxGridLayoutRow>
            <DxGridLayoutRow Height="auto" Areas="cards"></DxGridLayoutRow>
        </Rows>
        <Items>
            <DxGridLayoutItem Area="header" CssClass="welcome-title">
                <Template>
                    <div class="welcome-title-header">Welcome to Facilitate Platform Administration</div>
                    <div class="summary-panel">
                        <span class="summary-item"><a href="/leads">Leads:</a> <b>@countLeads.ToString("N0")</b></span>
                        <span class="summary-item"><a href="/opportunities">Opportunities:</a> <b>@countOpportunities.ToString("N0")</b></span>
                        <span class="summary-item"><a href="/customers">Customers:</a> <b>@countCustomers.ToString("N0")</b></span>
                        <span class="summary-item"><a href="/completed">Completions:</a> <b>@countCompleted.ToString("N0")</b></span>
                        <span class="summary-item"><a href="/archives">Archives:</a> <b>@countArchives.ToString("N0")</b></span>
                    </div>

                    <div class="welcome-title-content">
                        <img src="images/Backgrounds/Contractors.webp" alt="Facilitate Platform Admin" style="width: 100%; height: auto;" />
                        <br /><br />
                        Dashboard charts coming...
                    </div>
                </Template>
            </DxGridLayoutItem>
        </Items>
    </DxGridLayout>
</div>

<DxLoadingPanel @bind-Visible=@LoadingPanelVisible
                PositionTarget="body"
                ApplyBackgroundShading="true"
                CssClass="w-100">
</DxLoadingPanel>

@code {

    bool LoadingPanelVisible { get; set; } = true;

    public int countLeads = 0;
    public int countOpportunities = 0;
    public int countCustomers = 0;
    public int countCompleted = 0;
    public int countArchives = 0;

    public string updateStatus = "Refreshing";

    public Index()
    {
        var timer = new Timer(new TimerCallback(_ =>
        {
            GetLeadCount();

            InvokeAsync(() =>
            {
                StateHasChanged();

                LoadingPanelVisible = false;
            });
        }), null, 1000, 1000);
    }

    private IEnumerable<Quote>? quotes;

    private void GetLeadCount()
    {
        countLeads = WebServices.GetQuoteCount("New");
        countOpportunities = WebServices.GetQuoteCount("Opportunity");
        countCustomers = WebServices.GetQuoteCount("Customer");
        countCompleted = WebServices.GetQuoteCount("Complete");
        countArchives = WebServices.GetQuoteCount("Archive");
    }
}