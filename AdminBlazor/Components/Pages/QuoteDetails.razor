@page "/quotedetails"

@using AdminBlazor.Data
@using Facilitate.Libraries.Models;

@attribute [StreamRendering(true)]
@rendermode InteractiveServer
@inject QuoteService QuoteService

<PageTitle>QuoteDetails</PageTitle>
<h1>QuoteDetails</h1>

@if (quotes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DxGrid Data="@quotes">
        <Columns>
            <DxGridDataColumn Caption="Email" FieldName="email" />
            <DxGridDataColumn Caption="Phone" FieldName="phone" />

            <DxGridDataColumn Caption="Structures" FieldName="numberOfStructures" />
            <DxGridDataColumn Caption="SqFt" FieldName="totalSquareFeet" />
            <DxGridDataColumn Caption="Market" FieldName="market" />
            <DxGridDataColumn Caption="Referrer" FieldName="externalUrl" />
        </Columns>
    </DxGrid>
}

@code {

    private IEnumerable<Quote>? quotes;

    [Parameter]
    public RenderFragment<GridDetailRowTemplateContext> DetailRowTemplate { get; set; }

    public QuoteDetails()
    {
        var msg = "";

        try
        {
            var service = new QuoteService();

            quotes = service.GetQuotes("New");
        }
        catch (Exception ex)
        {
            msg = ex.Message;
        }
        finally
        {
            msg = "";
        }
    }

    void OnRowClick(GridRowClickEventArgs args)
    {
        var input = (Quote)args.Grid.SelectedDataItem;
    }
}