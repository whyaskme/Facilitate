@page "/leaddetails"
@* @page "/leaddetails/{leadId:string}" *@

@rendermode InteractiveServer

@attribute [StreamRendering]

@using Facilitate.Libraries.Models;

@using System;
@using System.Net.Http;
@using System.Net.Http.Headers;
@using System.Text.Json;
@using System.Threading.Tasks;

@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Hosting;
@using Microsoft.AspNetCore.Components.Server;
@using Microsoft.AspNetCore.Mvc;

@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@using Amazon.Auth.AccessControlPolicy;
@using Newtonsoft.Json.Linq;

@using System.Globalization;
@using System.Threading;

@using Facilitate.Libraries.Models;
@using Microsoft.AspNetCore.Mvc;
@using MongoDB.Driver;
@using MongoDB.Bson;
@using Libraries.Models;

<script src="javascript/Facilitate-Scripts.js"></script> 

<h1>Lead Details</h1>

<p role="status">Lead Details: <span style="color: #1f6339; font-weight: bold;">@updateStatus</span></p>

@if (_leads == null)
{
            <p><em>Loading...</em></p>
}
else
{
            <table class="table">
                <thead>
                    <tr>
@*                         <th></th>
                        <th>View</th> *@
                        <th>Status</th>
                        <th>Date</th>
                        <th>First</th>
                        <th>Last</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Street</th>
                        <th>City</th>
                        <th>State</th>
                        <th>Zip</th>
                        <th>Structs</th>
                        <th>SqFt</th>
                    </tr>
                </thead>
                <tbody>
            @foreach (var _lead in _leads)
            {
                currentItemNumber++;

                        <tr>
@*                             <td>@currentItemNumber</td>
                            <td>
                                <a href="javascript: expandDetails('@_lead._id')">
                                    <img src="images/Icons/Magnifying Glass.png" alt="Expand Lead Details" style="width: 20px !important; height: auto;" />
                                </a>
                            </td> *@
                            <td>New</td>
                            <td>@_lead.timestamp.ToString()</td>
                            <td>@_lead.firstName</td>
                            <td>@_lead.lastName</td>
                            <td>@_lead.email</td>
                            <td>@_lead.phone</td>
                            <td>@_lead.street</td>
                            <td>@_lead.city</td>
                            <td>@_lead.state</td>
                            <td>@_lead.zip</td>
                            <td>@_lead.numberOfStructures</td>
                            <td>@_lead.mainRoofTotalSquareFeet</td>
                        </tr>
            }
                </tbody>
            </table>
}

<br /><br />
<hr />
<button class="btn btn-primary" @onclick="DeleteLead">Delete Lead</button>

@code {

    [Parameter]
    public int leadId { get; set; }

    string dbName = "Facilitate";
    string collectionName = "Quote";

    string resultMsg = string.Empty;
    //string mongoUri = "mongodb+srv://facilitate:!13324BossWood@facilitate.73z1cne.mongodb.net/?retryWrites=true&w=majority&appName=Facilitate";
    string mongoUri = "mongodb://localhost:27017/?retryWrites=true&w=majority&appName=Facilitate";

    IMongoClient client;

    IMongoCollection<Quote> collection;

    //public string leadId = id;

    public int currentItemNumber = 0;
    private List<Quote>? _leads;

    public HttpClient serviceClient = new HttpClient
        {
            // BaseAddress = new Uri("https://api.facilitate.org/"),
            BaseAddress = new Uri("http://localhost/"),
            Timeout = new TimeSpan(0, 2, 0)    // Standard two minute timeout on web service calls.
        };

    public string updateStatus = "Fetching...";

    public LeadDetails()
    {
        updateStatus = "Fetching...";

        Quote _quote;

        try
        {
            client = new MongoClient(mongoUri);

            collection = client.GetDatabase(dbName).GetCollection<Quote>(collectionName);

            //_quote = collection.Find(Builders<Quote>.Filter.Empty);

        }
        catch (Exception ex)
        {
            resultMsg = ex.Message;
        }
        finally
        {

        }
    }

    private void DeleteLead()
    {
        updateStatus = "Deleting...";

        // var response = serviceClient.DeleteAsync("Quotes");

        // updateStatus = "Deleted!";
    }
}
