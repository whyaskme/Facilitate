@page "/leads"
@rendermode InteractiveServer

@attribute [StreamRendering]

@using Facilitate.Libraries.Models;

@using System;
@using System.Net.Http;
@using System.Net.Http.Headers;
@using System.Text.Json;
@using System.Threading.Tasks;

@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Hosting;
@using Microsoft.AspNetCore.Components.Server;
@using Microsoft.AspNetCore.Mvc;

@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@using Amazon.Auth.AccessControlPolicy;
@using Newtonsoft.Json.Linq;

@using System.Globalization;
@using System.Threading;

@using BlazorBootstrap;

<PageTitle>New Leads</PageTitle>

<h1>New Leads</h1>


<p role="status">Leads: <span style="color: #1f6339; font-weight: bold;">@updateStatus</span></p>

@if (_leads == null)
{
        <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="row row-header">
            <div class="col row-number">
                #
            </div>
            <div class="col row-view">
                View
            </div>
            <div class="col row-date">
                Date
            </div>
            <div class="col row-first-name">
                First
            </div>
            <div class="col row-last-name">
                Last
            </div>
            <div class="col row-email">
                Email
            </div>
            <div class="col row-phone">
                Phone
            </div>
            <div class="col row-street">
                Street
            </div>
            <div class="col row-city">
                City
            </div>
            <div class="col row-state">
                State
            </div>
            <div class="col row-zip">
                Zip
            </div>
            <div class="col row-structs">
                Structs
            </div>
            <div class="col row-sqft">
                SqFt
            </div>
        </div>

        @foreach (var _lead in _leads)
        {
            currentItemNumber++;

            <div class="row">
                <div class="col row-number">
                    @currentItemNumber
                </div>
                <div class="col row-view">
                    <a href="javascript: expandDetails('@_lead._id')">
                        <img src="images/Icons/Magnifying Glass.png" alt="Expand Lead Details" style="width: 20px !important; height: auto;" />
                    </a>
                </div>
                <div class="col row-date">
                    @_lead.timestamp.ToString()
                </div>
                <div class="col row-first-name">
                    @_lead.firstName
                </div>
                <div class="col row-last-name">
                    @_lead.lastName
                </div>
                <div class="col row-email">
                    @_lead.email
                </div>
                        <div class="col row-phone">
                    @_lead.phone
                </div>
                <div class="col row-street">
                    @_lead.street
                </div>
                <div class="col row-city">
                    @_lead.city
                </div>
                <div class="col row-state">
                    @_lead.state
                </div>
                <div class="col row-zip">
                    @_lead.zip
                </div>
                <div class="col row-structs">
                    @_lead.numberOfStructures
                </div>
                <div class="col row-sqft">
                    @_lead.mainRoofTotalSquareFeet
                </div>
            </div>

            <div id="@_lead._id" class="row row-details" style="display: none;">
                Details here...
            </div>
        }

    </div>
}

<br /><br />
<hr />
<button class="btn btn-primary" @onclick="DeleteLeads">Delete Leads</button>


@code {
    public int currentItemNumber = 0;
    private List<Quote>? _leads;

    public HttpClient serviceClient = new HttpClient
        {
            BaseAddress = new Uri("https://api.facilitate.org/"),
            // BaseAddress = new Uri("http://localhost/"),
            Timeout = new TimeSpan(0, 2, 0)    // Standard two minute timeout on web service calls.
        };

    public string updateStatus = "Fetching...";

    public Leads()
    {
        //FetchLeads();

        var timer = new Timer(new TimerCallback(_ =>
        {
            FetchLeads();
            InvokeAsync(() =>
            {
                StateHasChanged();
            });
        }), null, 1000, 1000);
    }

    private void FetchLeads()
    {
        currentItemNumber = 0;
        updateStatus = "Fetching...";

        var response = serviceClient.GetAsync("Quotes");

        var results = response.Result.Content.ReadAsStringAsync().Result;

        if (results != null)
        {
            _leads = JsonConvert.DeserializeObject<List<Quote>>(results);

            foreach (var lead in _leads)
            {
                lead.timestamp = DateTime.Parse(lead.timestamp, CultureInfo.InvariantCulture).ToShortDateString() + " " + DateTime.Parse(lead.timestamp, CultureInfo.InvariantCulture).ToShortTimeString();
            }

            updateStatus = _leads.Count().ToString();
        }
    }

    private void DeleteLeads()
    {
        updateStatus = "Deleting...";

        // var response = serviceClient.DeleteAsync("Quotes");

        // updateStatus = "Deleted!";
    }
}