@page "/opportunities"
@rendermode InteractiveServer

@using Facilitate.Libraries.Models;

@using System;
@using System.Net.Http;
@using System.Net.Http.Headers;
@using System.Text.Json;
@using System.Threading.Tasks;

@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Hosting;
@using Microsoft.AspNetCore.Components.Server;
@using Microsoft.AspNetCore.Mvc;

@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@using Amazon.Auth.AccessControlPolicy;
@using Newtonsoft.Json.Linq;

<PageTitle>Opportunities</PageTitle>

<h1>Opportunities</h1>

<p role="status">Active Opportunities: <span style="color: #ff0000;">@updateStatus</span></p>

@* <button class="btn btn-primary" @onclick="FetchQuotes">Refresh</button>
 *@

@code {

    public HttpClient serviceClient = new HttpClient
        {
            BaseAddress = new Uri("https://api.facilitate.org/"),
            // BaseAddress = new Uri("http://localhost"),
            Timeout = new TimeSpan(0, 2, 0)    // Standard two minute timeout on web service calls.
        };

    public string updateStatus = "Fetching...";

    public Opportunities()
    {
        var timer = new Timer(new TimerCallback(_ =>
        {
            FetchQuotes();
            InvokeAsync(() =>
            {
                StateHasChanged();
            });
        }), null, 1000, 1000);
    }

    private void FetchQuotes()
    {
        updateStatus = "Fetching";

        var response = serviceClient.GetAsync("Quotes");

        var results = response.Result.Content.ReadAsStringAsync().Result;

        var _quotes = JsonConvert.DeserializeObject<List<Quote>>(results);

        updateStatus = _quotes.Count().ToString();
    }
}